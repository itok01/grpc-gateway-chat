// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcgatewaychat.proto

package grpcgatewaychat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_e22e9e04421cb792, []int{0}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type Message struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_e22e9e04421cb792, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type MessageOk struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageOk) Reset()         { *m = MessageOk{} }
func (m *MessageOk) String() string { return proto.CompactTextString(m) }
func (*MessageOk) ProtoMessage()    {}
func (*MessageOk) Descriptor() ([]byte, []int) {
	return fileDescriptor_e22e9e04421cb792, []int{2}
}

func (m *MessageOk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageOk.Unmarshal(m, b)
}
func (m *MessageOk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageOk.Marshal(b, m, deterministic)
}
func (m *MessageOk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageOk.Merge(m, src)
}
func (m *MessageOk) XXX_Size() int {
	return xxx_messageInfo_MessageOk.Size(m)
}
func (m *MessageOk) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageOk.DiscardUnknown(m)
}

var xxx_messageInfo_MessageOk proto.InternalMessageInfo

func (m *MessageOk) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Null)(nil), "grpcgatewaychat.Null")
	proto.RegisterType((*Message)(nil), "grpcgatewaychat.Message")
	proto.RegisterType((*MessageOk)(nil), "grpcgatewaychat.MessageOk")
}

func init() { proto.RegisterFile("grpcgatewaychat.proto", fileDescriptor_e22e9e04421cb792) }

var fileDescriptor_e22e9e04421cb792 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x2f, 0x2a, 0x48,
	0x4e, 0x4f, 0x2c, 0x49, 0x2d, 0x4f, 0xac, 0x4c, 0xce, 0x48, 0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x47, 0x13, 0x96, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c,
	0xc8, 0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0x28, 0x57,
	0x62, 0xe3, 0x62, 0xf1, 0x2b, 0xcd, 0xc9, 0x51, 0x32, 0xe4, 0x62, 0xf7, 0x4d, 0x2d, 0x2e, 0x4e,
	0x4c, 0x4f, 0x15, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0,
	0x0c, 0x02, 0xb3, 0x41, 0x62, 0x25, 0xa9, 0x15, 0x25, 0x12, 0x4c, 0x10, 0x31, 0x10, 0x5b, 0x49,
	0x9a, 0x8b, 0x13, 0xaa, 0xc5, 0x3f, 0x5b, 0x88, 0x8f, 0x8b, 0x29, 0x3f, 0x1b, 0xac, 0x85, 0x23,
	0x88, 0x29, 0x3f, 0xdb, 0x68, 0x2d, 0x23, 0x17, 0x8b, 0x73, 0x46, 0x62, 0x89, 0x90, 0x1f, 0x17,
	0xbb, 0x7b, 0x6a, 0x09, 0x98, 0x29, 0xaa, 0x87, 0xee, 0x64, 0x90, 0xd5, 0x52, 0x12, 0x18, 0xc2,
	0x50, 0x63, 0x95, 0x04, 0x9a, 0x2e, 0x3f, 0x99, 0xcc, 0xc4, 0x25, 0xc4, 0xa1, 0x9f, 0x0b, 0x11,
	0x31, 0x60, 0x14, 0x0a, 0xe5, 0xe2, 0x08, 0xc8, 0x2f, 0x86, 0x18, 0x88, 0x53, 0xa7, 0x94, 0x14,
	0x2e, 0x19, 0xff, 0x6c, 0x25, 0x61, 0xb0, 0xa9, 0xbc, 0x4a, 0x70, 0x53, 0xad, 0x18, 0xb5, 0x9c,
	0x4c, 0xb8, 0xa4, 0x92, 0xf3, 0x73, 0xf5, 0x32, 0x4b, 0xf2, 0xb3, 0x0d, 0x0c, 0xd1, 0x35, 0x3b,
	0x89, 0xb8, 0x17, 0x15, 0x24, 0xbb, 0x43, 0x04, 0x40, 0x36, 0x07, 0x80, 0xc2, 0x2e, 0x80, 0x31,
	0x89, 0x0d, 0x1c, 0x88, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xd0, 0x1e, 0x40, 0x8c,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	GetChat(ctx context.Context, in *Null, opts ...grpc.CallOption) (Chat_GetChatClient, error)
	PostChat(ctx context.Context, in *Message, opts ...grpc.CallOption) (*MessageOk, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) GetChat(ctx context.Context, in *Null, opts ...grpc.CallOption) (Chat_GetChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/grpcgatewaychat.Chat/GetChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatGetChatClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_GetChatClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type chatGetChatClient struct {
	grpc.ClientStream
}

func (x *chatGetChatClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatClient) PostChat(ctx context.Context, in *Message, opts ...grpc.CallOption) (*MessageOk, error) {
	out := new(MessageOk)
	err := c.cc.Invoke(ctx, "/grpcgatewaychat.Chat/PostChat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	GetChat(*Null, Chat_GetChatServer) error
	PostChat(context.Context, *Message) (*MessageOk, error)
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) GetChat(req *Null, srv Chat_GetChatServer) error {
	return status.Errorf(codes.Unimplemented, "method GetChat not implemented")
}
func (*UnimplementedChatServer) PostChat(ctx context.Context, req *Message) (*MessageOk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostChat not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_GetChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Null)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).GetChat(m, &chatGetChatServer{stream})
}

type Chat_GetChatServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type chatGetChatServer struct {
	grpc.ServerStream
}

func (x *chatGetChatServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _Chat_PostChat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).PostChat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcgatewaychat.Chat/PostChat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).PostChat(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcgatewaychat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostChat",
			Handler:    _Chat_PostChat_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetChat",
			Handler:       _Chat_GetChat_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpcgatewaychat.proto",
}
